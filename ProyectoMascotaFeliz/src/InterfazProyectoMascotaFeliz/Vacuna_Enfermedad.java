/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazProyectoMascotaFeliz;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import proyectomascotafeliz.MantenimientosEnfermedad;
import proyectomascotafeliz.MantenimientoVacunaEnfermedad;
import proyectomascotafeliz.mantenimientoVacunas;
import datos.VacunasDatos;
import datos.EnfermedadDatos;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import proyectomascotafeliz.archivo;

/**
 *
 * @author Ronald
 */
public class Vacuna_Enfermedad extends javax.swing.JFrame {

    private archivo archivo = new archivo();
    MantenimientoVacunaEnfermedad conexionVacuna_Enfermedad;//Se realiza una conexion a vacuna enfermedad
    MantenimientosEnfermedad conexionEnfermedad;//Se realiza una conexion con la tabla enfermedad
    mantenimientoVacunas conexionVacunas;//Se realiza una conexiona  a vacunas
    private DefaultTableModel vacuna_enfermedad;//Se crea un modelo para la tabla vacuna enfermedad
    private JPanel panelInsertar;//Se se crea un nueva panel para insertar
    private String codigoguardar;//Se guarda el codigo de la enfermedad para poder cambiar la llave primaria
    private String codiguardar2;//Se guarda el codigo de la vacuna para poder cambiar la llave primaria

    /**
     * Creates new form Vacuna_Enfermedad
     */
    //Metodo constructor
    public Vacuna_Enfermedad() {
        archivo.leer();
        try {
            this.conexionVacuna_Enfermedad = new MantenimientoVacunaEnfermedad(archivo.getBase(), archivo.getUser(), archivo.getPassword());
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Especie.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.conexionEnfermedad = new MantenimientosEnfermedad(archivo.getBase(), archivo.getUser(), archivo.getPassword());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Especie.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Especie.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.conexionVacunas = new mantenimientoVacunas(archivo.getBase(), archivo.getUser(), archivo.getPassword());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Especie.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Especie.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource(("Iconos/vacuna-boca-mano-pie.jpg")));
        setIconImage(icono);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        try {
            llenarComboboxVacunas();
        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            llenarComboboxEnfermedades();
        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }
        enfermedad_vacuna();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //Se cargan los datos de la tabla enfermedad_vacuna
    public void enfermedad_vacuna() {
        vacuna_enfermedad = new DefaultTableModel();
        vacuna_enfermedad.addColumn("Codigo Enfermedad");
        vacuna_enfermedad.addColumn("Nombre Enfermedad");
        vacuna_enfermedad.addColumn("Codigo Vacuna");
        vacuna_enfermedad.addColumn("Nombre Vacuna");
        vacuna_enfermedad.addColumn("Porcentaje Efectividad");
        vacuna_enfermedad.addColumn("Notas");
        ResultSet datos = conexionVacuna_Enfermedad.select2();
        try {
            while (datos.next()) {
                String[] valores = {datos.getString("cod_enfermedad"), datos.getString("nombre_enfermedad"), datos.getString("cod_vacuna"), datos.getString("nombre_vacuna"), datos.getString("porc_efectividad"), datos.getString("notas")};
                vacuna_enfermedad.addRow(valores);
            }
            tablavacunas_Enfermedad.setModel(vacuna_enfermedad);
        } catch (Exception e) {
            System.out.println("Error: " + e.toString());
        }
    }

    //Se guardan los valores en un array list de las vacunas para usarlos en un combobox
    public ArrayList<VacunasDatos> obtenerVacunas() throws SQLException {
        ResultSet datos = conexionVacunas.select("*", "\"schProyecto\".\"vacuna\"", "");
        ArrayList<VacunasDatos> vacunas = new ArrayList();
        while (datos.next()) {
            VacunasDatos vacuna = new VacunasDatos(datos.getString("cod_vacuna"), datos.getString("nombre_vacuna"));
            vacunas.add(vacuna);
        }
        return vacunas;
    }

    //Se le asignan valores al combobox vacunas
    public void llenarComboboxVacunas() throws SQLException {
        for (int i = 0; i < obtenerVacunas().size(); i++) {
            comboBOXVacuna.addItem(obtenerVacunas().get(i).getCodigo_Vacuna() + " " + obtenerVacunas().get(i).getVacuna_Nombre());
        }
    }

    //Se guardan los valores en un array list de las enfermedades para usarlos en un combobox
    public ArrayList<EnfermedadDatos> obtenerEnfermedades() throws SQLException {
        ResultSet datos = conexionVacunas.select("*", "\"schProyecto\".\"enfermedad\"", "");
        ArrayList<EnfermedadDatos> enfermedades = new ArrayList();
        while (datos.next()) {
            EnfermedadDatos enfermedad = new EnfermedadDatos(datos.getString("cod_enfermedad"), datos.getString("nombre_enfermedad"));
            enfermedades.add(enfermedad);
        }
        return enfermedades;
    }

    //Se llena el combobox de enfermedades
    public void llenarComboboxEnfermedades() throws SQLException {
        for (int i = 0; i < obtenerEnfermedades().size(); i++) {
            comboBoxEnfermedad.addItem(obtenerEnfermedades().get(i).getCodigo_Enfermedad() + " " + obtenerEnfermedades().get(i).getNombre_Enfermedad());
        }
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Insertarvacuna_enfermedad = new javax.swing.JButton();
        eliminarvacuna_enfermedad = new javax.swing.JButton();
        modificarvacuna_enfermedad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablavacunas_Enfermedad = new javax.swing.JTable();
        cerrarventana = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        porcentajeEfectividad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        notas = new javax.swing.JTextField();
        comboBoxEnfermedad = new javax.swing.JComboBox();
        comboBOXVacuna = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Insertarvacuna_enfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Insertat.png"))); // NOI18N
        Insertarvacuna_enfermedad.setBorderPainted(false);
        Insertarvacuna_enfermedad.setContentAreaFilled(false);
        Insertarvacuna_enfermedad.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Insertat2.png"))); // NOI18N
        Insertarvacuna_enfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insertarvacuna_enfermedadActionPerformed(evt);
            }
        });
        getContentPane().add(Insertarvacuna_enfermedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 140, -1));

        eliminarvacuna_enfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Eliminar.png"))); // NOI18N
        eliminarvacuna_enfermedad.setBorderPainted(false);
        eliminarvacuna_enfermedad.setContentAreaFilled(false);
        eliminarvacuna_enfermedad.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Eliminar2.png"))); // NOI18N
        eliminarvacuna_enfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarvacuna_enfermedadActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarvacuna_enfermedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 150, -1));

        modificarvacuna_enfermedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Modificar.png"))); // NOI18N
        modificarvacuna_enfermedad.setBorderPainted(false);
        modificarvacuna_enfermedad.setContentAreaFilled(false);
        modificarvacuna_enfermedad.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Modificar2.png"))); // NOI18N
        modificarvacuna_enfermedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarvacuna_enfermedadActionPerformed(evt);
            }
        });
        getContentPane().add(modificarvacuna_enfermedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, 140, -1));

        tablavacunas_Enfermedad.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tablavacunas_Enfermedad.setSelectionForeground(new java.awt.Color(102, 102, 102));
        tablavacunas_Enfermedad.getTableHeader().setResizingAllowed(false);
        tablavacunas_Enfermedad.getTableHeader().setReorderingAllowed(false);
        tablavacunas_Enfermedad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablavacunas_EnfermedadMouseClicked(evt);
            }
        });
        tablavacunas_Enfermedad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablavacunas_EnfermedadKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablavacunas_Enfermedad);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 196, 610, 300));

        cerrarventana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Cerrar.png"))); // NOI18N
        cerrarventana.setBorderPainted(false);
        cerrarventana.setContentAreaFilled(false);
        cerrarventana.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Cerrar2.png"))); // NOI18N
        cerrarventana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarventanaActionPerformed(evt);
            }
        });
        getContentPane().add(cerrarventana, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 470, 140, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Enfermedad");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 159, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Vacuna");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Porcentaje Efectividad");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 231, -1, -1));

        porcentajeEfectividad.setSelectedTextColor(new java.awt.Color(102, 102, 102));
        porcentajeEfectividad.setSelectionColor(new java.awt.Color(204, 204, 204));
        getContentPane().add(porcentajeEfectividad, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 230, 84, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Notas");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, -1, -1));

        notas.setSelectedTextColor(new java.awt.Color(102, 102, 102));
        notas.setSelectionColor(new java.awt.Color(204, 204, 204));
        getContentPane().add(notas, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, 164, 80));
        getContentPane().add(comboBoxEnfermedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 160, 134, -1));

        comboBOXVacuna.setBackground(new java.awt.Color(204, 204, 204));
        comboBOXVacuna.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(comboBOXVacuna, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 200, 134, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Dueño/V-F.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/Dueño/V-F2.png"))); // NOI18N
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 100));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseños/fondo-madera-negro.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 920, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Accion del boton cerrar
    private void cerrarventanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarventanaActionPerformed
        // TODO add your handling code here:
        dispose();//Cierra la ventana
    }//GEN-LAST:event_cerrarventanaActionPerformed
    //Accion del boton insertar
    private void Insertarvacuna_enfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insertarvacuna_enfermedadActionPerformed
        // TODO add your handling code here:
        panelInsertar = new JPanel();
        //Se crean y añanden los componentes del panel insertar
        JButton insertar = new JButton("Insertar");
        JLabel CodigoEnfermedad = new JLabel("Codigo Enfermedada");
        JLabel CodigoVacuna = new JLabel("Codigo Vacuna");
        JLabel porcentaje = new JLabel("% Efectividad");
        JLabel notas = new JLabel("Notas");
        JComboBox comboBoxCodigoEnfermedad = new JComboBox();
        try {
            for (int x = 0; x < obtenerEnfermedades().size(); x++) {
                comboBoxCodigoEnfermedad.addItem(obtenerEnfermedades().get(x).getCodigo_Enfermedad() + " " + obtenerEnfermedades().get(x).getNombre_Enfermedad());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }
        JComboBox comboBOXCodigoVacuna = new JComboBox();
        try {
            for (int x = 0; x < obtenerVacunas().size(); x++) {
                comboBOXCodigoVacuna.addItem(obtenerVacunas().get(x).getCodigo_Vacuna() + " " + obtenerVacunas().get(x).getVacuna_Nombre());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }
        JTextField txtPorcentaje = new JTextField(10);
        JTextField txtNotas = new JTextField(10);

        panelInsertar.add(CodigoEnfermedad);
        panelInsertar.add(comboBoxCodigoEnfermedad);
        panelInsertar.add(CodigoVacuna);
        panelInsertar.add(comboBOXCodigoVacuna);
        panelInsertar.add(porcentaje);
        panelInsertar.add(txtPorcentaje);
        panelInsertar.add(notas);
        panelInsertar.add(txtNotas);
        JOptionPane.showConfirmDialog(null, panelInsertar, "Insertar Enfermedad-Vacuna", JOptionPane.PLAIN_MESSAGE);
        String datos;
        String estado;
        //Se insertan los datos escritos en el panel 
        try {
            datos = "('" + obtenerEnfermedades().get(comboBoxCodigoEnfermedad.getSelectedIndex()).getCodigo_Enfermedad()
                    + "','" + obtenerVacunas().get(comboBOXCodigoVacuna.getSelectedIndex()).getCodigo_Vacuna()
                    + "','" + txtPorcentaje.getText() + "','" + txtNotas.getText() + "')";
            estado = conexionVacuna_Enfermedad.Insertar("\"schProyecto\".\"enfermedad_vacuna\"", datos);
            JOptionPane.showMessageDialog(null, "Datos insertado con exito");
            enfermedad_vacuna();
        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Insertarvacuna_enfermedadActionPerformed
    //Elimina una vacuna_enfermedad seleccionad en la tabla
    private void eliminarvacuna_enfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarvacuna_enfermedadActionPerformed
        // TODO add your handling code here:
        String estado;

        estado = this.conexionVacuna_Enfermedad.eliminar("\"schProyecto\".\"enfermedad_vacuna\"", String.valueOf(tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 0)),
                String.valueOf(tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 2)));
        enfermedad_vacuna();
        JOptionPane.showMessageDialog(null, "Datos eliminados");

        porcentajeEfectividad.setText("");
        notas.setText("");
    }//GEN-LAST:event_eliminarvacuna_enfermedadActionPerformed
    //A la hora de seleccionar en la tabla se le asignan valores a las cajas de texto
    private void tablavacunas_EnfermedadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablavacunas_EnfermedadMouseClicked
        // TODO add your handling code here:
        porcentajeEfectividad.setText((String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 4));
        notas.setText((String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 5));
        codigoguardar = (String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 0);
        codiguardar2 = (String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 2);
    }//GEN-LAST:event_tablavacunas_EnfermedadMouseClicked
    //Se modifica una vacuna_enfermedad de la tabla
    private void modificarvacuna_enfermedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarvacuna_enfermedadActionPerformed

        String estado;
        try {
            estado = conexionVacuna_Enfermedad.Modificar("\"schProyecto\".\"enfermedad_vacuna\"", obtenerEnfermedades().get(comboBoxEnfermedad.getSelectedIndex()).getCodigo_Enfermedad(), obtenerVacunas().get(comboBOXVacuna.getSelectedIndex()).getCodigo_Vacuna(), porcentajeEfectividad.getText(), notas.getText(), codigoguardar, codiguardar2);

        } catch (SQLException ex) {
            Logger.getLogger(Razas.class.getName()).log(Level.SEVERE, null, ex);
        }
        enfermedad_vacuna();
        JOptionPane.showMessageDialog(null, "Datos modificados con exito");

        porcentajeEfectividad.setText("");
        notas.setText("");
    }//GEN-LAST:event_modificarvacuna_enfermedadActionPerformed

    private void tablavacunas_EnfermedadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablavacunas_EnfermedadKeyPressed
        // TODO add your handling code here:
        porcentajeEfectividad.setText((String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 4));
        notas.setText((String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 5));
        codigoguardar = (String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 0);
        codiguardar2 = (String) tablavacunas_Enfermedad.getValueAt(tablavacunas_Enfermedad.getSelectedRow(), 2);
    }//GEN-LAST:event_tablavacunas_EnfermedadKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vacuna_Enfermedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vacuna_Enfermedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vacuna_Enfermedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vacuna_Enfermedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vacuna_Enfermedad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Insertarvacuna_enfermedad;
    private javax.swing.JButton cerrarventana;
    private javax.swing.JComboBox comboBOXVacuna;
    private javax.swing.JComboBox comboBoxEnfermedad;
    private javax.swing.JButton eliminarvacuna_enfermedad;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarvacuna_enfermedad;
    private javax.swing.JTextField notas;
    private javax.swing.JTextField porcentajeEfectividad;
    private javax.swing.JTable tablavacunas_Enfermedad;
    // End of variables declaration//GEN-END:variables
}
